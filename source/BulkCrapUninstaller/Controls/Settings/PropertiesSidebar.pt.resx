<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="checkBoxOrphans.Text" xml:space="preserve">
    <value>Mostrar aplicações não registada na lista.</value>
  </data>
  <data name="checkBoxOrphans.ToolTip" xml:space="preserve">
    <value>Exibe aplicações sem desinstaladores registados.
São invisíveis na maioria dos gestores de desinstalação, mas ainda ocupam espaço. Itens não registrada são marcados a cor vermelha.

Aviso: Pense duas vezes antes de remover esses aplicativos pois poderão ainda ser necessários!</value>
  </data>
  <data name="checkBoxInvalidTest.Text" xml:space="preserve">
    <value>Destacar os desinstaladores 
inválidos</value>
  </data>
  <data name="checkBoxInvalidTest.ToolTip" xml:space="preserve">
    <value>Use a cor cinzenta para identificar desinstaladores corrompidos ou ausentes.</value>
  </data>
  <data name="checkBoxCertTest.Text" xml:space="preserve">
    <value>Destacar os desinstaladores 
certificados</value>
  </data>
  <data name="checkBoxCertTest.ToolTip" xml:space="preserve">
    <value>Use cores para identificar os desinstaladores certificados. Se o certificado foi verificado com êxito, utilize a cor cinzenta, caso contrário use a cor azul.

Atenção: O processo de verificação pode demorar muito tempo.
</value>
  </data>
  <data name="checkBoxListHideMicrosoft.Text" xml:space="preserve">
    <value>Ocultar se publicado pela Microsoft</value>
  </data>
  <data name="checkBoxListHideMicrosoft.ToolTip" xml:space="preserve">
    <value>Filtra tudo o que foi publicado pela Microsoft. Tão simples como isso.</value>
  </data>
  <data name="checkBoxListSysComp.Text" xml:space="preserve">
    <value>Mostrar os componentes do sistema</value>
  </data>
  <data name="checkBoxListSysComp.ToolTip" xml:space="preserve">
    <value>Alguns desinstaladores podem ser designados como "componentes do sistema" para os esconder na lista
Adicionar/Remover Programas. Os drivers são muitas vezes rotulados com essa designação.
</value>
  </data>
  <data name="checkBoxListProtected.Text" xml:space="preserve">
    <value>Mostrar itens protegidos</value>
  </data>
  <data name="checkBoxListProtected.ToolTip" xml:space="preserve">
    <value>Itens protegidos assinalados com a denominação "NoRemove (NãoRemover)" significa que o editor não quer que você os remova.</value>
  </data>
  <data name="checkBoxShowUpdates.Text" xml:space="preserve">
    <value>Mostrar actualizações</value>
  </data>
  <data name="checkBoxShowUpdates.ToolTip" xml:space="preserve">
    <value>Actualizações de outras aplicações. Normalmente, elas são desinstaladas em conjunto com aplicações semelhantes, para que possam ser ignoradas.</value>
  </data>
  <data name="checkBoxWinFeature.Text" xml:space="preserve">
    <value>Mostrar os recursos do Windows</value>
  </data>
  <data name="checkBoxShowStoreApps.Text" xml:space="preserve">
    <value>Mostrar as app do Windows Store</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Filtrando</value>
  </data>
  <data name="checkBoxViewCheckboxes.Text" xml:space="preserve">
    <value>Seleccione usando as caixas 
de selecção.</value>
  </data>
  <data name="checkBoxViewCheckboxes.ToolTip" xml:space="preserve">
    <value>Mudar o tipo de selecção da lista de caixas de opção.  São mais seguros porque um
único clique não consegue desmarcar tudo.

Você pode verificar vários itens, destacando-os e carregando na barra de espaço.
</value>
  </data>
  <data name="checkBoxViewGroups.Text" xml:space="preserve">
    <value>Mostrar os itens em grupos</value>
  </data>
  <data name="checkBoxViewGroups.ToolTip" xml:space="preserve">
    <value>Agrupar itens com base na coluna
usada para as ordenar.
O agrupamento da maior parte das colunas utiliza uma triagem inteligente.

</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Configurações da lista de exibição</value>
  </data>
</root>